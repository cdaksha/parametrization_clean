appName: ReaxFF-Parametrization  # TODO
logLevel: DEBUG  # TODO
GA_ONLY: true  # true - GA only; false - GA + ANN
adaptation: false  # true - Adaptive crossover & mutation probabilities, otherwise not

path:  # file paths
  root: /lustre/scratch/daksha/00-reference-trainsets/test-sets/ReaxFF_ZnO_Raymand_with_Sglass_control_all_bounds/  # reference training set directory
  population: /lustre/scratch/daksha/202002-ZnO-results/base_case/1/  # genetic population directory
  ANNFile: ann.h5  # file name to manage saving of ANN - NOT CURRENTLY NEEDED

GA:  # GA parameters
  populationSize: 50
  selection:
    algorithm: tournament  # choose selection algorithm here
  elitism: on  # TODO
  mutation:
    probability: 0.20
    # might be better to mutate 'all' parameters
    fractionParametersToMutate: all  # Fraction of parameters to mutate, otherwise 'all' or 'random'
    algorithm: nakata  # choose mutation algorithm here
  crossover:
    probability: 0.80
    algorithm: one_point  # choose crossover algorithm here
  adaptation: 
    algorithm: lei  # 'lei' or 'srinivas'

NestedGA:  # Nested GA parameters
  iterations: 10  # number of nested iterations, in which ANN is used for predictions
  mutation:
    probability: 0.01  # nested GA mutation rate - should be very low, as ANN is bad at extrapolation
  crossover:
    probability: 0.99  # nested GA crossover rate

ANN:  # Artificial Neural Network parameters
  epochs: 20000  # Model is trained for EPOCHS number of iterations (early stopping implemented if model not improving)
  trainSplit: 0.80  # Fraction of data to use for training set
  validationSplit: 0.20
  batchSize: 32
  validationRsquareThreshold: 0.90  # If validation R-squared is below this value, use GA only
  verbosity: 2  # TODO - 2 = very verbose, 0 = not verbose

AlgorithmParameters:  # Parameters for various algorithms potentially used in this project
  selection: 
    tournament:
      size: 2  # Set to `2` for binary tournament selection: two individuals compared, and better one is used
    truncation:
      probability: 0.10  # 0.10 implies top 10% of population used for next generation mutation/crossover
  mutation:
    polynomial:
      eta: 60  # Crowding degree of mutation. High eta produces mutant resembling parent, vice versa
    gauss:
      std: 1.0  # Standard deviation for Gaussian
    multi_gauss:
      std:  # list of standard deviations to use
        - 0.01
        - 0.1
        - 1.0
      frac:  # corresponding probabilities for standard deviations
        - 0.4
        - 0.4
        - 0.2
    nakata:  # new_param = old_param + (scale * old_param * rand_num); currently used for first population
      scale: 0.1  # floating point, otherwise 'param_increments' - set to zero for debugging
      randomLower: -1.0  # lower bound for rand_num
      randomUpper: 1.0  # upper bound for rand_num
    log_logistic:
      alpha: 2.0  # mutation index (strength)
    gauss_and_cauchy:  # Equally probable to use either Gauss or Cauchy
      # std parameter for Cauchy is automatically set to 1
    AMMO:  # adaptive mean mutation operator, Chellapilla 1998 - DOESN'T WORK WITH REAXFF SCHEMA
      initial_sigma: 1.0000  # Koenig 2002's initial sigma = 0.0006; Chellapilla initializes them to equal 3
      minimum_sigma: 0.0001  #  Koenig & Chellapilla's lower bound for sigma values
  crossover:
    dpx:  # Double Pareto Crossover from Thakur's 2014 paper
      alpha: 10  # shape parameter - bigger alpha produces children further away from parents
      beta: 1  # scale parameter - bigger beta produces children further away from parents
  adaptation:
    lei:
      A: 0.8  # 0.5 < A < 1.0; population considered concentrated if (min_cost / ave_cost) > a
      B: 0.8  # 0.0 < B < 1.0; population considered locally converged if (min_cost / max_cost) > b
    srinivas:  # current parameters set based on author's work
      k1: 1.0
      k2: 0.5
      k3: 1.0
      k4: 0.5
      default_mutation_rate: 0.005
    xiao:  # max crossover and mutation probabilities are based on GA parameters
      crossover_min_probability: 0.4  # author uses max: 0.7, min: 0.35
      mutation_min_probability: 0.05  # author uses max: 0.1, min: 0.05
      C: 40  # Constant that can control changing rate - author uses C = 40 and recommends C = [20, 60]
